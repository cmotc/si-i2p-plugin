func (i2proxy *i2pHTTPProxy) pipe(src, dst io.ReadWriter) {
	islocal := src == i2proxy.lconn
	var dataDirection string
	if islocal {
		dataDirection = ">>> %d bytes sent%s"
	} else {
		dataDirection = "<<< %d bytes recieved%s"
	}
	var byteFormat string
	if i2proxy.OutputHex {
		byteFormat = "%x"
	} else {
		byteFormat = "%s"
	}
	//directional copy (64k buffer)
	buff := make([]byte, 0xffff)
	for {
		n, err := src.Read(buff)
		if err != nil {
			i2proxy.err("Read failed '%s'\n", err)
			return
		}
		b := buff[:n]
		//show output
		i2proxy.Log.Printf(dataDirection, n, "")
		i2proxy.Log.Panicf(byteFormat, b)
		//write out result
		n, err = dst.Write(b)
		if err != nil {
			i2proxy.err("Write failed '%s'\n", err)
			return
		}
		if islocal {
			i2proxy.sentBytes += uint64(n)
		} else {
			i2proxy.recievedBytes += uint64(n)
		}
	}
}
